import{a as d,T as l}from"./assets/vendor-cc1203f3.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function c(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(e){if(e.ep)return;e.ep=!0;const s=c(e);fetch(e.href,s)}})();const u=d.create({baseURL:"https://your-energy.b.goit.study/api",headers:{Accept:"application/json"}}),p=async t=>{var c,o;const r=await u.post("/subscription",{email:t});if((c=r.data)!=null&&c.error)throw new Error(((o=r.data)==null?void 0:o.error)||"Subscription failed");return r.data},f=async(t="Muscles",r=1)=>{const o=window.innerWidth<768?9:12;try{return(await u.get("/filters",{params:{filter:t,page:r,limit:o}})).data}catch(e){console.error("Error fetching categories:",e)}},m=async()=>{try{return(await u.get("/quote")).data}catch(t){console.error("Error fetching the quote:",t)}},g=()=>{document.getElementById("subscription-form").addEventListener("submit",async r=>{var e,s,n;r.preventDefault();const c=r.target.elements.email,o=c.value;try{const i=await p(o);if(i){const a=((e=i.data)==null?void 0:e.message)||i.message||"Subscription successful!";l({text:a,duration:3e3,style:{background:"#4CAF50"},close:!0}).showToast(),c.value=""}}catch(i){const a=((n=(s=i.response)==null?void 0:s.data)==null?void 0:n.message)||i.message||"An error occurred. Please try again later.";l({text:a,duration:3e3,style:{background:"#FF5F6D"},close:!0}).showToast()}})};document.querySelector(".exercises-filter-input");const y=document.querySelector('button[data-name="Muscles"]'),b=document.querySelector(".excercises-categories-list");async function h(){if(y.classList.contains("active"))try{const t=await f("Muscles",1);console.log(t);const r=M(t.results);b.insertAdjacentHTML("beforeend",r)}catch(t){console.error("Error fetching categories:",t)}else{musclesExcercisesMarkup.innerHTML="";return}}h();function M(t){return t.map(r=>{const{filter:c,name:o,imgURL:e}=r;return` <li class="excercises-categories-item" data-body-part='${o}'>
			<button type="button" class="excercises-categories-btn"  alt="${o}" style='background: linear-gradient(0deg, rgba(17, 17, 17, 0.50) 0%, rgba(17, 17, 17, 0.50) 100%), url(${e}) no-repeat;
background-size: cover;
	background-position: center;'

				<div class="excercises-categories-info">
					<h3 class="excercises-category-title">${o}</h3>
					<p class="excercises-category-descr">${c}</p>
				</div>
			</button>
		</li> `}).join("")}const L=document.querySelector(".sidebar-quote"),x=document.querySelector(".sidebar-quote-author"),q=async()=>{const t=await m();L.innerHTML=t.quote,x.innerHTML=t.author};q();document.addEventListener("DOMContentLoaded",()=>{g()});
//# sourceMappingURL=index.js.map
