import{a as B,T as w}from"./vendor-cc1203f3.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function s(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(r){if(r.ep)return;r.ep=!0;const a=s(r);fetch(r.href,a)}})();const f=B.create({baseURL:"https://your-energy.b.goit.study/api",headers:{Accept:"application/json"}}),A=async t=>{var s,o;const e=await f.post("/subscription",{email:t});if((s=e.data)!=null&&s.error)throw new Error(((o=e.data)==null?void 0:o.error)||"Subscription failed");return e.data},k=async(t="Muscles",e=1)=>{const o=window.innerWidth<768?9:12;try{const r=await f.get("/filters",{params:{filter:t,page:e,limit:o}});if(!r.data)throw new Error("No data received");return r.data}catch(r){throw console.error("Error fetching categories:",r),new Error("Failed to fetch categories. Please try again later.")}},$=async()=>{try{return(await f.get("/quote")).data}catch(t){console.error("Error fetching the quote:",t)}},D=async({bodypart:t="",muscles:e="",equipment:s="",keyword:o="",page:r=1,limit:a=10})=>{try{return(await f.get("/exercises",{params:{bodypart:t,muscles:e,equipment:s,keyword:o,page:r,limit:a}})).data}catch(c){console.error("Error fetching exercises:",c)}},C=()=>{document.getElementById("subscription-form").addEventListener("submit",async e=>{var r,a,c;e.preventDefault();const s=e.target.elements.email,o=s.value;try{const n=await A(o);if(n){const h=((r=n.data)==null?void 0:r.message)||n.message||"Subscription successful!";w({text:h,duration:3e3,style:{background:"#4CAF50"},close:!0}).showToast(),s.value=""}}catch(n){const h=((c=(a=n.response)==null?void 0:a.data)==null?void 0:c.message)||n.message||"An error occurred. Please try again later.";w({text:h,duration:3e3,style:{background:"#FF5F6D"},close:!0}).showToast()}})},i=document.querySelector('button[data-name="Muscles"]'),l=document.querySelector('button[data-name="Body parts"]'),d=document.querySelector('button[data-name="Equipment"]'),b=document.querySelector(".exercises-categories-list");let P=1,S;i.addEventListener("click",async t=>{i.classList.add("active"),d.classList.remove("active"),l.classList.remove("active"),L("Muscles")});l.addEventListener("click",async t=>{i.classList.remove("active"),d.classList.remove("active"),l.classList.add("active"),L("Body parts")});d.addEventListener("click",async t=>{i.classList.remove("active"),d.classList.add("active"),l.classList.remove("active"),L("Equipment")});async function L(t){try{S=await k(t,P),b.innerHTML="",b.insertAdjacentHTML("beforeend",F(S.results))}catch(e){console.log("Error fetching categories:",e)}}async function I(){i.classList.add("active"),L("Muscles")}b.addEventListener("click",t=>{const e=t.target.closest(".exercises-categories-item");if(e){const s=e.getAttribute("data-body-part");console.log(s)}});function F(t){return t.map(e=>{const{filter:s,name:o,imgURL:r}=e;return` <li class="exercises-categories-item" data-body-part='${o}'>
			<button type="button" class="exercises-categories-btn"  alt="${o}" style='background: linear-gradient(0deg, rgba(17, 17, 17, 0.50) 0%, rgba(17, 17, 17, 0.50) 100%), url(${r}) no-repeat;
background-size: cover;
	background-position: center;'

				<div class="exercises-categories-info">
					<h3 class="exercises-category-title">${o}</h3>
					<p class="exercises-category-descr">${s}</p>
				</div>
			</button>
		</li> `}).join("")}document.addEventListener("DOMContentLoaded",function(){const t=document.querySelector(".js-open-menu"),e=document.querySelector(".js-close-menu"),s=document.querySelector(".menu-backdrop");t&&s&&(t.addEventListener("click",function(){s.classList.add("is-open"),e.style.display="block"}),e.addEventListener("click",function(){s.classList.remove("is-open"),e.style.display="none"}))});const u=document.querySelectorAll(".header-nav-link");function E(t){u.forEach(e=>e.parentElement.classList.remove("active")),t.parentElement.classList.add("active")}window.addEventListener("load",()=>{const t=window.location.pathname,e=[...u].find(s=>t.includes(s.getAttribute("href")));if(e)E(e);else{const s=u[0];E(s)}});u.forEach(t=>{t.addEventListener("click",e=>{localStorage.setItem("activeLink",e.currentTarget.getAttribute("href")),E(e.currentTarget)})});const m=document.querySelector('button[data-name="Muscles"]'),g=document.querySelector('button[data-name="Body parts"]'),y=document.querySelector('button[data-name="Equipment"]'),q=document.querySelector(".exercises-categories-list");let H=1,M;m.addEventListener("click",async()=>{m.classList.add("active"),y.classList.remove("active"),g.classList.remove("active"),await v("Muscles")});g.addEventListener("click",async()=>{m.classList.remove("active"),y.classList.remove("active"),g.classList.add("active"),await v("Body parts")});y.addEventListener("click",async()=>{m.classList.remove("active"),y.classList.add("active"),g.classList.remove("active"),await v("Equipment")});async function v(t){try{M=await k(t,H),q.innerHTML="",q.insertAdjacentHTML("beforeend",createGalleryCards(M.results))}catch(e){console.log("Error fetching categories:",e)}}q.addEventListener("click",async t=>{const e=t.target.closest(".exercises-categories-item");if(e){const s=e.getAttribute("data-body-part");console.log(s),await O(s)}});async function O(t){const e=document.querySelector(".exercises-categories-list");e.innerHTML="";try{const s=await D({bodyPart:t});console.log("Fetched exercises:",s);const o=s.results;Array.isArray(o)?o.forEach(r=>{const a=j(r);e.appendChild(a)}):console.error("Fetched exercises is not an array:",o)}catch(s){console.log("Error fetching exercises:",s)}}function j(t){const e=document.createElement("li");return e.classList.add("exercise-card"),e.innerHTML=`
        <svg class="icon" aria-hidden="true">
            <use href="./img/sprite.svg#men"></use>
        </svg>
        <h3>${t.name}</h3>
        <p><strong>Calories:</strong> ${t.burnedCalories} / 3 min</p>
        <p><strong>Body Part:</strong> ${t.bodyPart}</p>
        <p><strong>Target:</strong> ${t.target}</p>
        <p><strong>Rating:</strong> 
            <svg class="star-icon" aria-hidden="true">
                <use href="./img/sprite.svg#stars"></use>
            </svg>
            ${t.rating}
        </p>
        <button class="start-button">Start</button>
    `,e.querySelector(".start-button").addEventListener("click",()=>{console.log(`Start exercise: ${t.name}`)}),e}document.addEventListener("DOMContentLoaded",()=>{v("Muscles")});const x=document.querySelector(".sidebar-quote"),T=document.querySelector(".sidebar-quote-author"),G=localStorage.getItem("quoteDate"),N=new Date,Q=async()=>{if(G!==N.toLocaleDateString()){const t=await $();x.innerHTML=t.quote,T.innerHTML=t.author;const e=new Date;localStorage.setItem("quoteText",t.quote),localStorage.setItem("quoteAuthor",t.author),localStorage.setItem("quoteDate",e.toLocaleDateString())}else x.innerHTML=localStorage.getItem("quoteText"),T.innerHTML=localStorage.getItem("quoteAuthor")};Q();const p=document.querySelector(".scroll-container");p.classList.add("hidden");window.addEventListener("scroll",()=>{window.scrollY>300?p.classList.remove("hidden"):p.classList.add("hidden")});p.addEventListener("click",()=>{window.scrollTo({top:0,behavior:"smooth"})});document.addEventListener("DOMContentLoaded",()=>{C(),I()});
//# sourceMappingURL=main-1093eb49.js.map
